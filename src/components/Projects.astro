---
const { title, description, details } = Astro.props;
let isExpanded = false; // Track whether the text is expanded
---

<article class="p-5 rounded-xl border border-gray-200 bg-white hover:shadow-md transition cursor-pointer">
  <h3 class="text-xl font-semibold mb-2 text-gray-800">{title}</h3>

  <!-- Description with clamping -->
  <p id={`description-${title}`} class={`text-gray-600 mb-4 ${isExpanded ? '' : 'line-clamp-3'}`} data-title={title}>{description}</p>

  <!-- Details with clamping -->
  <p id={`details-${title}`} class={`text-gray-600 mb-4 ${isExpanded ? '' : 'line-clamp-3'}`} data-title={title}>
    {details}
  </p>

  <!-- See More button is shown only when text is clamped -->
  <button 
    class={`text-blue-500 font-semibold mt-2 ${isExpanded ? 'hidden' : ''}`}
    id={`seeMoreButton-${title}`}
    data-title={title}>
    See More
  </button>

  <!-- See Less button is shown when text is expanded -->
  <button 
    class={`text-blue-500 font-semibold mt-2 ${isExpanded ? '' : 'hidden'}`}
    id={`toggleButton-${title}`}
    data-title={title}>
    See Less
  </button>
</article>

<script type="module" client:load>
  document.addEventListener('DOMContentLoaded', () => {
    let isClamped = false; // Track if text is overflowing (clamped)
    let isExpanded = false; // Track if the text is expanded
    
    // Loop through each button with data-title attribute
    const toggleButtons = document.querySelectorAll('button[data-title]');
    const seeMoreButtons = document.querySelectorAll('button[id^="seeMoreButton-"]');

    toggleButtons.forEach((button) => {
      const title = button.getAttribute('data-title');
      const details = document.getElementById(`details-${title}`);
      const description = document.getElementById(`description-${title}`);
      const toggleButton = button;
      const seeMoreButton = document.getElementById(`seeMoreButton-${title}`);
      const seeLessButton = document.getElementById(`toggleButton-${title}`);

      // Function to check if the text is overflowing
      function checkTextOverflow() {
        if (details.scrollHeight > details.clientHeight || description.scrollHeight > description.clientHeight) {
          // If text is overflowing, show the See More button
          seeMoreButton.classList.remove('hidden');
          isClamped = true;
        } else {
          // If text is not overflowing, hide the See More button
          seeMoreButton.classList.add('hidden');
          isClamped = false;
        }
      }

      // Check if the text is overflowing when page loads
      checkTextOverflow();

      // Recheck on window resize (optional)
      window.addEventListener('resize', checkTextOverflow);

      // Event listener for toggling the expansion
      seeMoreButton.addEventListener('click', () => {
        isExpanded = true;

        // Toggle the expansion state
        details.classList.remove('line-clamp-3');
        description.classList.remove('line-clamp-3');

        // Hide See More button and show See Less button
        seeMoreButton.classList.add('hidden');
        seeLessButton.classList.remove('hidden');
      });

      seeLessButton.addEventListener('click', () => {
        isExpanded = false;

        // Toggle the expansion state
        details.classList.add('line-clamp-3');
        description.classList.add('line-clamp-3');

        // Hide See Less button and show See More button
        seeLessButton.classList.add('hidden');
        seeMoreButton.classList.remove('hidden');
      });
    });
  });
</script>

  <!-- <a href={`/projects/${slug}`} 
    class="text-blue-500 font-medium hover:underline">
      View Project â†’
    </a> -->